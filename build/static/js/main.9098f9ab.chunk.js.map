{"version":3,"sources":["api/index.js","constance/actionTypes.js","action/post.js","component/form/Form.js","component/Comment.js","component/post/post/Post.js","component/post/Posts.js","component/nav/style.js","component/nav/Nav.js","App.js","reducer/post.js","reducer/index.js","index.js"],"names":["url","createPost","newPost","axios","post","deletePost","id","delete","updatePost","patch","createComment","newComment","deleteComment","deleteCommentID","data","CREATE","UPDATE","DELETE","FETCH_ALL","CREATECOMMENT","DELETECOMMENT","dispatch","a","API","type","payload","commentData","console","log","message","updatedPost","Form","setCurrentID","currentID","currentPost","posts","find","_id","history","useHistory","inputRef","useRef","useDispatch","useState","base64","decode","selectedFile","picture","setPicture","base64Data","setBase64Data","creator","setNewPost","useEffect","handleSubmit","e","preventDefault","push","Paper","elevation","sx","maxWidth","my","mx","Box","onSubmit","TextField","label","margin","multiline","fullWidth","value","onChange","target","minRows","InputBase","inputComponent","file","files","reader","FileReader","reader2","onloadend","result","readAsDataURL","encode","encodeImageFileAsURL","ImageListItem","height","width","src","alt","position","top","left","bgcolor","IconButton","onClick","current","borderRadius","style","fontSize","Container","display","justifyContent","mt","Button","variant","size","border","borderColor","to","textDecoration","Comment","deleteCommentBtn","comments","map","item","mb","body","ml","Post","comment","setComment","toggleComment","setToggleComment","deleteAndReload","Card","CardHeader","avatar","Avatar","backgroundColor","Math","floor","random","toString","toUpperCase","title","subheader","moment","createdAt","fromNow","CardMedia","component","image","CardContent","Typography","color","CardActions","Drawer","onClose","onOpen","open","anchor","right","bottom","postID","commentID","Posts","length","Grid","container","alignItems","reverse","xs","py","CircularProgress","useStyles","makeStyles","theme","flexLayout","Nav","classes","AppBar","Toolbar","className","Badge","badgeContent","Fab","App","useSelector","state","get","exact","path","reducer","action","filter","com","reducers","combineReducers","store","createStore","compose","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9098f9ab.chunk.js","sourcesContent":["import axios from \"axios\";\nconst url = \"https://fullstack-post.herokuapp.com/posts\";\nexport const fetchPosts = () => axios.get(url);\n// export const fetchPost = (id) => axios.get(`${url}/${id}`);\nexport const createPost = (newPost) => axios.post(url, newPost);\nexport const deletePost = (id) => axios.delete(`${url}/${id}`);\nexport const updatePost = (id, updatePost) =>\n  axios.patch(`${url}/${id}`, updatePost);\n\n// export const likePost = (id) => axios.patch(`${url}/${id}/likePost`);\nexport const createComment = (id, newComment) =>\n  axios.patch(`${url}/${id}/createcomment`, newComment);\nexport const deleteComment = (id, deleteCommentID) => {\n  axios.delete(`${url}/${id}/deletecomment`, { data: { deleteCommentID } });\n};\n","export const CREATE = \"CREATE\";\nexport const UPDATE = \"UPDATE\";\nexport const DELETE = \"DELETE\";\nexport const FETCH_ALL = \"FETCH_ALL\";\n// export const LIKE = \"LIKE\";\nexport const CREATECOMMENT = \"CREATECOMMENT\";\nexport const DELETECOMMENT = \" DELETECOMMENT\";\n","import * as API from \"../api\";\nimport {\n  FETCH_ALL,\n  CREATE,\n  UPDATE,\n  DELETE,\n  // LIKE,\n  CREATECOMMENT,\n  DELETECOMMENT,\n} from \"../constance/actionTypes\";\nexport const createComment = (id, newComment) => async (dispatch) => {\n  try {\n    const { data } = await API.createComment(id, newComment);\n    dispatch({ type: CREATECOMMENT, payload: data.commentData });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const deleteComment = (id, deleteCommentID) => async (dispatch) => {\n  try {\n    await API.deleteComment(id, deleteCommentID);\n    dispatch({ type: DELETECOMMENT, payload: { id, deleteCommentID } });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const getPosts = () => async (dispatch) => {\n  try {\n    const { data } = await API.fetchPosts();\n    dispatch({ type: FETCH_ALL, payload: data.post });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const deletePost = (id) => async (dispatch) => {\n  try {\n    await API.deletePost(id);\n    dispatch({ type: DELETE, payload: id });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const updatePost = (id, updatedPost) => async (dispatch) => {\n  try {\n    const { data } = await API.updatePost(id, updatedPost);\n    dispatch({ type: UPDATE, payload: data.post });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const createPost = (newPost) => async (dispatch) => {\n  try {\n    const { data } = await API.createPost(newPost);\n    dispatch({ type: CREATE, payload: data.post });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n// export const likePost = (id) => async (dispatch) => {\n//   try {\n//     const { data } = await API.likePost(id);\n//     dispatch({ type: LIKE, payload: data });\n//   } catch (error) {\n//     console.log(error.message);\n//   }\n// };\n","import React, { useState, useRef, useEffect } from \"react\";\nimport {\n  TextField,\n  Button,\n  Paper,\n  IconButton,\n  Container,\n  ImageListItem,\n  InputBase,\n} from \"@material-ui/core\";\nimport { useHistory } from \"react-router-dom\";\nimport HighlightOffIcon from \"@mui/icons-material/HighlightOff\";\nimport { createPost, updatePost } from \"../../action/post\";\nimport { useDispatch } from \"react-redux\";\nimport { Box } from \"@material-ui/system\";\nimport base64 from \"react-native-base64\";\nimport { Link } from \"react-router-dom\";\nimport DeleteForeverRoundedIcon from \"@mui/icons-material/DeleteForeverRounded\";\nimport \"./style.css\";\n\nexport const Form = ({ setCurrentID, currentID, posts }) => {\n  // find the currentID post\n  const currentPost = posts.find((post) => post._id === currentID);\n\n  const history = useHistory();\n  const inputRef = useRef();\n  const dispatch = useDispatch();\n\n  //state set\n  // use picture(need a url type) state to preview the img, if the user need to edite the post(there is currentID),show the old img first\n  const [picture, setPicture] = useState(\n    currentID ? base64.decode(currentPost.selectedFile) : \"\"\n  );\n  // use base64Data to store the img in mongodb, use the fileReader API to read the input file, and the baseecode package to encode the file(see below)\n  const [base64Data, setBase64Data] = useState(\"\");\n  const [newPost, setNewPost] = useState(\n    currentID\n      ? currentPost\n      : {\n          message: \"\",\n          creator: \"\",\n          selectedFile: \"\",\n        }\n  );\n\n  // I dont know why need use useEffect instead of setNewPost in when submit kuku\n  useEffect(() => {\n    if (!base64Data && picture && currentID) {\n      setNewPost({ ...newPost, selectedFile: newPost.selectedFile });\n    } else {\n      setNewPost({ ...newPost, selectedFile: base64Data });\n    }\n  }, [base64Data]);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    if (currentID) {\n      dispatch(updatePost(currentID, newPost));\n    } else {\n      dispatch(createPost(newPost));\n    }\n    setNewPost({ message: \"\", creator: \"\", selectedFile: \"\" });\n    setCurrentID();\n    setBase64Data(\"\");\n    history.push(\"/\");\n  };\n  // cancel or rechoose a uploading img\n  const clear = () => {\n    setPicture(\"\");\n    setBase64Data(\"\");\n    inputRef.current.value = \"\";\n  };\n  // endcode the updated img and set the picture(to the preview the img) and the base64Data(to store the img into database)\n  const encodeImageFileAsURL = (e) => {\n    const file = e.target.files[0];\n    const reader = new FileReader();\n    const reader2 = new FileReader();\n    console.log(\"hi\");\n\n    reader.onloadend = function () {\n      setPicture(reader.result);\n    };\n    reader.readAsDataURL(file);\n\n    reader2.onloadend = function () {\n      setBase64Data(base64.encode(reader2.result));\n      console.log(base64Data);\n    };\n\n    reader2.readAsDataURL(file);\n  };\n\n  return (\n    <Paper elevation={3} sx={{ maxWidth: 550, my: 1, mx: \"auto\" }}>\n      <Box sx={{ maxWidth: 400, my: 1, mx: \"auto\" }}>\n        <form onSubmit={handleSubmit}>\n          <TextField\n            label=\"make a name\"\n            margin=\"normal\"\n            multiline\n            fullWidth\n            value={newPost.creator}\n            onChange={(e) =>\n              setNewPost({\n                ...newPost,\n                creator: e.target.value,\n              })\n            }\n          />\n          <TextField\n            label=\"say something\"\n            multiline\n            fullWidth\n            value={newPost.message}\n            minRows={5}\n            onChange={(e) =>\n              setNewPost({\n                ...newPost,\n                message: e.target.value,\n              })\n            }\n          />\n\n          <InputBase\n            inputComponent=\"input\"\n            inputRef={inputRef}\n            type=\"file\"\n            onChange={(e) => {\n              encodeImageFileAsURL(e);\n            }}\n          />\n\n          {picture && (\n            <ImageListItem sx={{ height: 150, width: 150 }}>\n              <img src={picture} alt=\"\" sx={{ position: \"relative\" }} />\n              <Box\n                sx={{\n                  position: \"absolute\",\n                  top: 1,\n                  left: 1,\n                  bgcolor: \"grey\",\n                }}\n              >\n                <IconButton\n                  onClick={() => clear()}\n                  sx={{ borderRadius: \"none\" }}\n                >\n                  <HighlightOffIcon style={{ fontSize: \"15px\" }} />\n                </IconButton>\n              </Box>\n            </ImageListItem>\n          )}\n          <Container\n            sx={{\n              display: \"flex\",\n              justifyContent: \"space-around\",\n              mt: 1,\n            }}\n          >\n            <Button\n              variant=\"contained\"\n              size=\"small\"\n              sx={{ borderRadius: 1, border: 1, borderColor: \"primary.main\" }}\n              type=\"submit\"\n            >\n              {currentID ? \"UPDATA\" : \"SUBMIT\"}\n            </Button>\n            <Link to=\"/\" style={{ textDecoration: \"none\" }}>\n              <Button\n                variant=\"contained\"\n                size=\"small\"\n                sx={{ borderRadius: 1, border: 1, borderColor: \"primary.main\" }}\n                onClick={() => setCurrentID()}\n              >\n                CANCLE\n              </Button>\n            </Link>\n          </Container>\n        </form>\n      </Box>\n    </Paper>\n  );\n};\n","import { Container, IconButton, Paper, Typography } from \"@material-ui/core\";\nimport React from \"react\";\nimport DeleteOutlineIcon from \"@mui/icons-material/DeleteOutline\";\n\nexport const Comment = ({ post, deleteCommentBtn }) => {\n  return (\n    <>\n      {post.comments.map((item) => {\n        return (\n          <Paper key={item._id} sx={{ mb: 3, bgcolor: \"grey.200\" }}>\n            <Container>\n              <Typography>{item.body}</Typography>\n            </Container>\n            <IconButton\n              sx={{ ml: 45 }}\n              onClick={() => {\n                deleteCommentBtn(post._id, item._id);\n              }}\n            >\n              <DeleteOutlineIcon />\n            </IconButton>\n          </Paper>\n        );\n      })}\n    </>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Card,\n  CardActions,\n  CardContent,\n  CardMedia,\n  Typography,\n  Button,\n  CardHeader,\n  Container,\n  IconButton,\n  Box,\n  Drawer,\n  TextField,\n} from \"@mui/material\";\nimport DeleteOutlineRoundedIcon from \"@mui/icons-material/DeleteOutlineRounded\";\nimport EditRoundedIcon from \"@mui/icons-material/EditRounded\";\nimport MessageRoundedIcon from \"@mui/icons-material/MessageRounded\";\nimport Avatar from \"@mui/material/Avatar\";\nimport base64 from \"react-native-base64\";\n\nimport moment from \"moment\";\nimport { deletePost } from \"../../../action/post\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport { Comment } from \"../../Comment\";\nimport { createComment, deleteComment } from \"../../../action/post\";\n\nexport const Post = ({ post, setCurrentID, currentID }) => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [comment, setComment] = useState({ body: \"\" });\n  const [toggleComment, setToggleComment] = useState(false);\n\n  const deleteAndReload = () => {\n    dispatch(deletePost(post._id));\n  };\n  const editePost = () => {\n    setCurrentID(post._id);\n    history.push(\"/creat\");\n  };\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    dispatch(createComment(post._id, comment));\n    setComment({ body: \"\" });\n    setToggleComment(false);\n  };\n  const deleteCommentBtn = (postID, commentID) => {\n    dispatch(deleteComment(postID, commentID));\n  };\n  function randomColor() {\n    let hex = Math.floor(Math.random() * 0xffffff);\n    let color = \"#\" + hex.toString(16);\n\n    return color;\n  }\n\n  return (\n    <Card>\n      <CardHeader\n        avatar={\n          <Avatar\n            style={{\n              backgroundColor: randomColor(),\n            }}\n          >\n            {post.creator ? post.creator[0].toUpperCase() : \"XO\"}\n          </Avatar>\n        }\n        title={post.creator}\n        subheader={moment(post.createdAt).fromNow()}\n      />\n      {post.selectedFile && (\n        <CardMedia\n          component=\"img\"\n          height=\"194\"\n          image={base64.decode(post.selectedFile)}\n          alt=\"\"\n        />\n      )}\n      <CardContent>\n        <Typography variant=\"h4\" color=\"grey.700\">\n          {post.message}\n        </Typography>\n      </CardContent>\n      <CardActions sx={{ display: \"flex\", justifyContent: \"space-evenly\" }}>\n        <IconButton\n          size=\"small\"\n          onClick={() => {\n            deleteAndReload();\n          }}\n        >\n          <DeleteOutlineRoundedIcon />\n        </IconButton>\n        <IconButton\n          size=\"small\"\n          onClick={() => {\n            editePost();\n          }}\n        >\n          <EditRoundedIcon />\n        </IconButton>\n        <IconButton size=\"small\" onClick={() => setToggleComment(true)}>\n          <MessageRoundedIcon />\n        </IconButton>\n      </CardActions>\n\n      <Drawer\n        onClose={() => setToggleComment(false)}\n        onOpen={() => setToggleComment(true)}\n        open={toggleComment}\n        variant=\"temporary\"\n        anchor=\"bottom\"\n      >\n        <Box component=\"form\" onSubmit={handleSubmit}>\n          <TextField\n            multiline\n            minRows={5}\n            value={comment.body}\n            onChange={(e) => {\n              setComment({ body: e.target.value });\n            }}\n            sx={{ width: \"100%\", height: \"100%\" }}\n          />\n          <Button\n            type=\"submit\"\n            variant=\"text\"\n            sx={{ position: \"absolute\", right: 3, bottom: 2 }}\n          >\n            submit\n          </Button>\n        </Box>\n      </Drawer>\n      {post.comments && (\n        <Container>\n          <Comment post={post} deleteCommentBtn={deleteCommentBtn} />\n        </Container>\n      )}\n    </Card>\n  );\n};\n","import React, { useEffect } from \"react\";\n// import { getPosts } from \"../../action/post\";\nimport { Post } from \"./post/Post\";\nimport { Grid, CircularProgress, Paper } from \"@material-ui/core\";\n// import { useDispatch } from \"react-redux\";\n// import { useSelector } from \"react-redux\";\n\nexport const Posts = ({ setCurrentID, currentID, posts }) => {\n  // const posts = useSelector((state) => state.posts);\n  // const dispatch = useDispatch();\n  // useEffect(() => {\n  //   dispatch(getPosts());\n  // }, [dispatch]);\n\n  return !posts.length ? (\n    <CircularProgress />\n  ) : (\n    <Paper sx={{ my: 1, mx: \"auto\", maxWidth: 550, bgcolor: \"grey.50\" }}>\n      <Grid container justifyContent=\"center\" alignItems=\"center\">\n        {posts.reverse().map((post) => {\n          return (\n            <Grid item xs={12} key={post._id} sx={{ py: 2, maxWidth: 450 }}>\n              <Post\n                post={post}\n                setCurrentID={setCurrentID}\n                currentID={currentID}\n              />\n            </Grid>\n          );\n        })}\n      </Grid>\n    </Paper>\n  );\n};\n","import { makeStyles } from \"@mui/styles\";\nconst useStyles = makeStyles((theme) => ({\n  flexLayout: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n  },\n}));\nexport default useStyles;\n","import {\n  AppBar,\n  Badge,\n  Box,\n  Container,\n  Fab,\n  IconButton,\n  Toolbar,\n} from \"@material-ui/core\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport NotificationsIcon from \"@mui/icons-material/Notifications\";\nimport AccountCircle from \"@mui/icons-material/AccountCircle\";\nimport React from \"react\";\nimport useStyles from \"./style\";\nimport { Link } from \"react-router-dom\";\n\nexport const Nav = () => {\n  const classes = useStyles();\n  return (\n    <Container maxWidth=\"sm\">\n      <AppBar position=\"static\">\n        <Toolbar className={classes.flexLayout}>\n          <IconButton color=\"inherit\">\n            <Badge badgeContent={17} color=\"error\">\n              <NotificationsIcon />\n            </Badge>\n          </IconButton>\n          <Link to=\"/creat\">\n            <Fab>\n              <AddIcon />\n            </Fab>\n          </Link>\n          <IconButton color=\"inherit\">\n            <AccountCircle />\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n    </Container>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { Form } from \"./component/form/Form\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { Posts } from \"./component/post/Posts\";\nimport { Nav } from \"./component/nav/Nav\";\nimport { useDispatch } from \"react-redux\";\nimport { getPosts } from \"./action/post\";\n\nimport { useSelector } from \"react-redux\";\nexport const App = () => {\n  const [currentID, setCurrentID] = useState();\n  const posts = useSelector((state) => state.posts);\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getPosts());\n  }, [dispatch]);\n\n  return (\n    <Router>\n      <Nav />\n      <Switch>\n        <Route exact path=\"/\">\n          <Posts\n            setCurrentID={setCurrentID}\n            currentID={currentID}\n            posts={posts}\n          />\n        </Route>\n        <Route exact path=\"/creat\">\n          <Form\n            setCurrentID={setCurrentID}\n            currentID={currentID}\n            posts={posts}\n          />\n        </Route>\n      </Switch>\n    </Router>\n  );\n};\n","import {\n  FETCH_ALL,\n  CREATE,\n  UPDATE,\n  DELETE,\n  // LIKE,\n  CREATECOMMENT,\n  DELETECOMMENT,\n} from \"../constance/actionTypes\";\nconst reducer = (posts = [], action) => {\n  switch (action.type) {\n    case FETCH_ALL:\n      console.log(\"fetch\");\n      return action.payload;\n    case CREATE:\n      return [...posts, action.payload];\n    case DELETE:\n      return posts.filter((item) => item._id !== action.payload);\n    case UPDATE:\n      return posts.map((item) => {\n        if (item._id === action.payload._id) {\n          item = action.payload;\n        }\n        return item;\n      });\n    // case LIKE:\n    //   return posts.map((item) =>\n    //     item._id === action.payload._id ? action.payload : item\n    //   );\n    case CREATECOMMENT:\n      return posts.map((item) => {\n        if (item._id === action.payload._id) {\n          item.comments = action.payload.comments;\n        }\n\n        return item;\n      });\n    case DELETECOMMENT:\n      return posts.map((item) => {\n        if (item._id === action.payload.id) {\n          item.comments = item.comments.filter(\n            (com) => com._id !== action.payload.deleteCommentID\n          );\n        }\n        return item;\n      });\n    default:\n      return posts;\n  }\n};\nexport default reducer;\n","import { combineReducers } from \"redux\";\nimport posts from \"./post\";\nexport const reducers = combineReducers({ posts });\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { App } from \"./App\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { reducers } from \"./reducer/index\";\nimport \"./index.css\";\nconst store = createStore(reducers, compose(applyMiddleware(thunk)));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}